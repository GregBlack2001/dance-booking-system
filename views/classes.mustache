<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>{{title}}</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">

  {{> navbar}}

  <!-- Hidden CSRF token -->
  <input type="hidden" id="csrfToken" value="{{csrfToken}}">
  
  <div class="container py-5">
    <h1 class="mb-4 text-center">{{title}}</h1>

    {{#courses.length}}
      <div class="row">
        {{#courses}}
          <div class="col-md-6 mb-4">
            <div class="card shadow-sm h-100">
              <!-- Add hidden span with course ID -->
              <span class="course-id-holder d-none">{{_id}}</span>
              
              <div class="card-body">
                <h5 class="card-title">{{title}}</h5>
                <h6 class="card-subtitle mb-2 text-muted">{{instructor}}</h6>
                <p class="card-text">{{description}}</p>
                <ul class="list-unstyled">
                  <li><strong>Date:</strong> {{date}}</li>
                  <li><strong>Location:</strong> {{location}}</li>
                  <li><strong>Price:</strong> Â£{{price}}</li>
                </ul>

                {{#user}}
                  <button class="btn btn-outline-primary book-btn" 
                          data-bs-toggle="modal" 
                          data-bs-target="#confirmModal">
                    Book Course
                  </button>
                {{/user}}

                {{^user}}
                  <a href="/book/{{_id}}" class="btn btn-outline-primary">Book</a>
                {{/user}}

                {{#isAdmin}}
                  <a href="/courses/edit/{{_id}}" class="btn btn-sm btn-outline-secondary ms-2">Edit</a>
                  <form method="POST" action="/courses/delete/{{_id}}" class="d-inline">
                    <input type="hidden" name="_csrf" value="{{csrfToken}}">
                    <button class="btn btn-sm btn-outline-danger ms-1" type="submit">Delete</button>
                  </form>
                  <a href="/participants/{{_id}}" class="btn btn-sm btn-outline-info ms-2">Participants</a>
                {{/isAdmin}}
              </div>
            </div>
          </div>
        {{/courses}}
      </div>
    {{/courses.length}}

    {{^courses.length}}
      <div class="alert alert-info text-center">No upcoming courses at the moment.</div>
    {{/courses.length}}
  </div>

  <!-- Modal for booking confirmation -->
  <div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="confirmModalLabel">Confirm Booking</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Are you sure you want to book <strong id="modalCourseTitle"></strong>?
          <!-- Hidden input to store the course ID -->
          <input type="hidden" id="modalCourseId" />
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button id="confirmBookingBtn" class="btn btn-primary">Yes, Book</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Set up booking buttons correctly
      document.querySelectorAll('.book-btn').forEach(btn => {
        const card = btn.closest('.card');
        const courseId = card.querySelector('.course-id-holder').textContent;
        const courseTitle = card.querySelector('.card-title').textContent;
        
        // Store course data on the button
        btn.setAttribute('data-course-id', courseId);
        btn.setAttribute('data-course-title', courseTitle);
        
        console.log('Setup button for course:', courseId, courseTitle);
      });
      
      // Modal handling
      const modal = document.getElementById('confirmModal');
      
      modal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        
        // Get the course ID from the button's data attribute
        const courseId = button.getAttribute('data-course-id');
        const courseTitle = button.getAttribute('data-course-title');
        
        // Add extensive logging
        console.log('Modal trigger button:', button);
        console.log('Button data-course-id:', courseId);
        console.log('Button data-course-title:', courseTitle);
        
        // Store the course ID in the modal
        document.getElementById('modalCourseId').value = courseId;
        document.getElementById('modalCourseTitle').textContent = courseTitle;
      });

      document.getElementById('confirmBookingBtn').addEventListener('click', function () {
        // Get the course ID from the hidden input in the modal
        const courseId = document.getElementById('modalCourseId').value;
        const csrfToken = document.getElementById('csrfToken').value;
        
        // Add debugging
        console.log('Making booking request for course:', courseId);
        console.log('Using CSRF token:', csrfToken);

        if (!courseId) {
          console.error('No course ID found');
          return;
        }

        // Make the fetch request with the course ID
        fetch(`/book/${courseId}`, { 
          method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'CSRF-Token': csrfToken
          }
        })
        .then(response => {
          const contentType = response.headers.get('content-type');
          if (contentType && contentType.includes('application/json')) {
            return response.json().then(data => {
              if (!response.ok) {
                throw new Error(data.error || 'Booking failed');
              }
              return data;
            });
          }
          if (!response.ok) {
            throw new Error('Booking failed');
          }
          return { message: 'Booking successful' };
        })
        .then((data) => {
          const message = typeof data === 'object' ? data.message : 'Booking confirmed!';
          
          const toastContainer = document.createElement('div');
          toastContainer.innerHTML = `
            <div class="toast-container position-fixed bottom-0 end-0 p-3">
              <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-success text-white">
                  <strong class="me-auto">Booking Successful</strong>
                  <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">${message}</div>
              </div>
            </div>
          `;
          document.body.appendChild(toastContainer);

          // Close the modal
          const modalElement = bootstrap.Modal.getInstance(document.getElementById('confirmModal'));
          if (modalElement) {
            modalElement.hide();
          }

          setTimeout(() => location.reload(), 2000);
        })
        .catch((error) => {
          console.error('Booking error:', error);
          
          const toastContainer = document.createElement('div');
          toastContainer.innerHTML = `
            <div class="toast-container position-fixed bottom-0 end-0 p-3">
              <div class="toast show bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-danger text-white">
                  <strong class="me-auto">Booking Error</strong>
                  <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                  ${error.message || 'There was a problem with your booking.'}
                </div>
              </div>
            </div>
          `;
          document.body.appendChild(toastContainer);

          setTimeout(() => {
            const toast = document.querySelector('.toast-container');
            if (toast) toast.remove();
          }, 5000);
        });
      });
    });
  </script>
</body>
</html>